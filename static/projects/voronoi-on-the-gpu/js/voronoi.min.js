!function(){function a(a,b,c){this._id=a,this._type=b,this._color=c}function b(b,c,d,e,f,g){a.call(this,b,h.point,g.color),this._mesh=new THREE.Mesh(f,g),this._mesh.scale.set(e,e,e),this.x=c,this.y=d}function c(b,d,e,f,g,i){a.call(this,b,h.line,i.color),this._a=new THREE.Vector3(d.x,d.y,0),this._b=new THREE.Vector3(e.x,e.y,0),this._aProxy=c._endpointProxy(this,"_a"),this._bProxy=c._endpointProxy(this,"_b"),this._geometry=g,this._material=i,this._mesh={endpointA:new THREE.Mesh(this._geometry.endpoint,this._material),endpointB:new THREE.Mesh(this._geometry.endpoint,this._material),edge:new THREE.Mesh(this._geometry.edge,this._material)},this._mesh.endpointA.scale.set(f,f,f),this._mesh.endpointA.rotation.z=Math.PI,this._mesh.endpointB.scale.set(f,f,f),this._mesh.edge.scale.set(f,1,f),this._origin=new THREE.Object3D,this._origin.add(this._mesh.endpointA,this._mesh.endpointB,this._mesh.edge),this._updateMesh()}function d(a){this._canvas=a,this._scene=new THREE.Scene,this._camera=new THREE.OrthographicCamera(0,a.width,a.height,0,1,Math.max(a.width,a.height)),this._camera.position.z=2,this._renderer=new THREE.WebGLRenderer({canvas:a}),this._renderer.setClearColor(0),this._material_cache={}}function e(){this._sites={},this._markers={},this._origin=new THREE.Object3D,this._markerGeometry=new THREE.PlaneGeometry(1,1),this._markerMaterial=new THREE.MeshBasicMaterial({color:e.style.color}),this.visible=!1}function f(a){function f(a){var b={canvas:null,width:500,height:500,precision:16,markers:!0};return"undefined"==typeof a?b:(a.canvas=a.canvas||null,a.width=+a.width||b.width,a.height=+a.height||b.height,a.precision=+a.precision||b.precision,a.markers=!!a.markers,a)}function g(a,b){var c=document.createElement("canvas");return c.width=a,c.height=b,c}a=f(a),null===a.canvas?this._canvas=g(a.width,a.height):this._canvas=a.canvas,this._3d=new d(this._canvas),this._precision=a.precision,this._sites={},this._id=0,this._nSites=0,this._maxDistance=Math.max(this._canvas.width,this._canvas.height),this._pointDistanceGeometry=b.distanceGeometry(this._precision),this._lineDistancGeometry={edge:c.edgeDistanceGeometry(),endpoint:c.endpointDistanceGeometry(this._precision)},this._markerLayer=new e,this._markerLayer.visible=a.markers,this._3d.add(this._markerLayer.origin)}var g={triangleFan:function(a,b,c,d){var e=new THREE.Geometry,f=new THREE.Vector3(0,0,0);e.vertices.push(f);for(var g=c/d,h=d+1,i=0;h>i;++i){var j=g*i,k=new THREE.Vector2(a*Math.cos(j),a*Math.sin(j));e.vertices.push(new THREE.Vector3(k.x,k.y,-b))}e.verticesNeedUpdate=!0;for(var l=0;d>l;++l)e.faces.push(new THREE.Face3(0,l+1,l+2));return e.elementsNeedUpdate=!0,e.mergeVertices(),e},tent:function(a,b,c){var d=new THREE.Geometry,e=b/2,f=a/2;return d.vertices=[new THREE.Vector3(0,-e,0),new THREE.Vector3(0,e,0),new THREE.Vector3(-f,-e,-c),new THREE.Vector3(-f,e,-c),new THREE.Vector3(f,-e,-c),new THREE.Vector3(f,e,-c)],d.verticesNeedUpdate=!0,d.faces=[new THREE.Face3(0,3,2),new THREE.Face3(0,1,3),new THREE.Face3(0,4,5),new THREE.Face3(0,5,1)],d.elementsNeedUpdate=!0,d}};a.prototype={constructor:a,get id(){return this._id},get type(){return this._type},get color(){return this._color}};var h={point:0,line:1};b.distanceGeometry=function(a){return g.triangleFan(1,1,2*Math.PI,a)},b.prototype=Object.create(a.prototype,{x:{get:function(){return this._mesh.position.x},set:function(a){this._mesh.position.x=a}},y:{get:function(){return this._mesh.position.y},set:function(a){this._mesh.position.y=a}},origin:{get:function(){return this._mesh}},radius:{get:function(){return this._mesh.scale.x},set:function(a){this._mesh.scale.set(+a,+a,+a)}}}),b.prototype.constructor=b,c._endpointProxy=function(a,b){return{set:function(c,d){a[b].x=+c,a[b].y=+d,a._updateMesh()},get x(){return a[b].x},set x(c){a[b].x=+c,a._updateMesh()},get y(){return a[b].y},set y(c){a[b].y=+c,a._updateMesh()}}},c.edgeDistanceGeometry=function(){return g.tent(2,1,1)},c.endpointDistanceGeometry=function(a){return g.triangleFan(1,1,Math.PI,a)},c.prototype=Object.create(a.prototype,{_updateMesh:{value:function(){var a=(new THREE.Vector3).subVectors(this._b,this._a),b=a.length();this._mesh.endpointB.position.y=b,this._mesh.edge.scale.y=b,this._mesh.edge.position.y=b/2;var c=new THREE.Vector3(a.x,a.y,0);c.normalize();var d=new THREE.Quaternion;d.setFromUnitVectors(new THREE.Vector3(0,1,0),c),this._origin.rotation.setFromQuaternion(d),this._origin.position.set(this._a.x,this._a.y,0)}},a:{get:function(){return this._aProxy}},b:{get:function(){return this._bProxy}},length:{value:function(){return(new THREE.Vector3).subVectors(this._b,this._a).length()}},direction:{value:function(){return(new THREE.Vector3).subVectors(this._b,this._a).normalize()}},mesh:{get:function(){return this._mesh}},origin:{get:function(){return this._origin}},radius:{get:function(){return this._mesh.endpointA.scale.x},set:function(a){this._mesh.endpointA.scale.set(+a,+a,+a),this._mesh.endpointB.scale.set(+a,+a,+a),this._mesh.edge.scale.setX(+a),this._mesh.edge.scale.setZ(+a)}}}),c.prototype.constructor=c,d.prototype={constructor:d,add:function(a){this._scene.add(a)},remove:function(a){this._scene.remove(a)},render:function(){this._renderer.render(this._scene,this._camera)},resize:function(){this._renderer.setSize(this._canvas.width,this._canvas.height),this._camera.right=this._canvas.width,this._camera.top=this._canvas.height,this._camera.far=Math.max(this._canvas.width,this._canvas.height)+1,this._camera.updateProjectionMatrix()},material:function(a){var b=a.getStyle();return this._material_cache.hasOwnProperty(b)||(this._material_cache[b]=new THREE.MeshBasicMaterial({color:a})),this._material_cache[b]}},e.style={color:new THREE.Color(0,0,0),size:5},e.prototype={constructor:e,add:function(a){if(!this._sites.hasOwnProperty(a.id)){var b=new THREE.Mesh(this._markerGeometry,this._markerMaterial);switch(a.type){case h.line:b.scale.set(e.style.size,a.length(),1);break;default:b.scale.set(e.style.size,e.style.size,1)}this._sites[a.id]=a,this._markers[a.id]=b,this._origin.add(b)}},remove:function(a){if(this._sites.hasOwnProperty(a.id)){var b=this._markers[a.id];this._origin.remove(b),delete this._markers[a.id],delete this._sites[a.id]}},update:function(){for(var a in this._sites){var b=this._markers[a],c=this._sites[a];switch(c.type){case h.line:b.rotation.setFromQuaternion((new THREE.Quaternion).setFromUnitVectors(new THREE.Vector3(0,1,0),c.direction()));var d={x:(c.a.x+c.b.x)/2,y:(c.a.y+c.b.y)/2};b.position.set(d.x,d.y,0);break;default:b.position.set(c.x,c.y,0)}}},get visible(){return this._origin.visible},set visible(a){this._origin.visible=!!a},get origin(){return this._origin}},f.prototype={constructor:f,_parseColor:function(a){return"string"==typeof a?new THREE.Color(a):new THREE.Color(a.r,a.g,a.b)},point:function(a,c,d){d=this._parseColor(d);var e=new b(this._id++,a,c,this._maxDistance,this._pointDistanceGeometry,this._3d.material(d));return this._add(e),e},line:function(a,b,d){d=this._parseColor(d);var e=new c(this._id++,a,b,this._maxDistance,this._lineDistancGeometry,this._3d.material(d));return this._add(e),e},_add:function(a){this._sites[a.id]=a,this._nSites++,this._3d.add(a.origin),this._markerLayer.add(a)},remove:function(a){var b="number"==typeof a?a:a.id;if(this._sites.hasOwnProperty(b)){var c=this._sites[b];return this._markerLayer.remove(c),this._3d.remove(c.origin),delete this._sites[b],this._nSites--,!0}return!1},render:function(){this._markerLayer.visible&&this._markerLayer.update(),this._3d.render()},resize:function(){this._maxDistance=Math.max(this._canvas.width,this._canvas.height),this._3d.resize();for(var a in this._sites)this._sites[a].radius=this._maxDistance},get canvas(){return this._canvas},get precision(){return this._precision},get nSites(){return this._nSites},get markers(){return this._markerLayer}},"undefined"!=typeof window&&(window.Voronoi={Diagram:f,SiteType:h})}();